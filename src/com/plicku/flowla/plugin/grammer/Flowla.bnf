{
  parserClass="com.plicku.flowla.plugin.parser.FlowlaParser"

  extends="com.intellij.extapi.psi.ASTWrapperPsiElement"

  psiClassPrefix="Flowla"
  psiImplClassSuffix="Impl"
  psiPackage="com.plicku.flowla.plugin.psi"
  psiImplPackage="com.plicku.flowla.plugin.impl"

  elementTypeHolderClass="com.plicku.flowla.plugin.psi.FlowlaTypes"
  elementTypeClass="com.plicku.flowla.plugin.psi.FlowlaElementType"
  tokenTypeClass="com.plicku.flowla.plugin.psi.FlowlaTokenType"
}

flowFile ::= item_*

private item_ ::= (comment|steps|lines_to_keyword)

comment ::= (comment_line white)*
comment_line ::= space* '#' line_to_eol
steps ::= step*
step ::= comment step_keyword keyword_space line_to_eol (eol+ | eof) multiline_arg? white
multiline_arg ::=  table | py_string
py_string ::= open_py_string (!close_py_string .)* close_py_string
open_py_string ::= space* '"""' space* eol
close_py_string ::= eol space* '"""' white
row ::= space* '|' cell+ eol
cell ::= '[^\r\n|]'+ '|'
table ::= row+
step_keyword ::= 'Given' | 'When' | 'Then' | 'And' | 'But'
lines_to_keyword ::= (!(eol space* reserved_words_and_symbols) .)*
reserved_words_and_symbols ::= (step_keyword keyword_space) | table |  comment_line
line_to_eol ::= (!eol .)*
space ::= ' ' | '\t'
eol ::= '\r'? '\n'
white ::= (space | eol)*
keyword_space ::= ' '